{"version":3,"file":"static/js/958.71b0ad67.chunk.js","mappings":"oNAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAe,kP,SCC1B,SAASE,EAAU,GAAkB,IAAhBC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KACnCC,GAAWC,EAAAA,EAAAA,MACjB,OACE,yBACE,SAACP,EAAU,CAACQ,GAAIH,EAAMI,MAAO,CAAEC,KAAMJ,GAAW,SAC7CF,KAIT,C,+HCXaO,EAAYV,EAAAA,GAAAA,IAAU,gIAQtBW,EAAQX,EAAAA,GAAAA,EAAQ,kEAKhBY,EAAYZ,EAAAA,GAAAA,GAAS,4D,mBCVnB,SAASa,IACtB,OAA4CC,EAAAA,EAAAA,UAAS,IAAG,eAAjDC,EAAc,KAAEC,EAAiB,KAMxC,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,oBAAwBC,KAAKH,GAAmBI,MAAMC,QAAQC,IAChE,GAAG,KAGD,UAACZ,EAAS,YACR,SAACC,EAAK,UAAC,qBACP,SAACC,EAAS,UACPG,EAAeQ,KAAI,gBAAGC,EAAE,EAAFA,GAAIC,EAAc,EAAdA,eAAc,OACvC,SAACvB,EAAA,EAAS,CAAUC,MAAOsB,EAAgBrB,KAAI,iBAAYoB,IAA3CA,EAAmD,QAK7E,C,+ECjBME,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,CAAEC,cAAc,UAAD,OAHxB,wNAIAC,QAAS,iCAGmB,aAG7B,OAH6B,0BAA9B,WAA+BN,GAAE,8FACRE,EAAS,UAAD,OAAWF,IAAM,KAAD,EAAnC,OAAmC,SAAvCO,EAAI,EAAJA,KAAI,kBACLA,GAAI,4CACZ,sBAE+B,aAG/B,OAH+B,0BAAhC,2GACyBL,EAAS,wBAAwB,KAAD,EAA3C,OAA2C,SAA/CK,EAAI,EAAJA,KAAI,kBACLA,EAAKC,SAAO,4CACpB,sBAE8B,aAO9B,OAP8B,0BAA/B,WAAgCC,GAAK,8FACZP,EAAS,gBAAiB,CAC/CQ,OAAQ,CACND,MAAAA,KAED,KAAD,EAJU,OAIV,SAJMF,EAAI,EAAJA,KAAI,kBAKLA,EAAKC,SAAO,4CACpB,sBAE0B,aAG1B,OAH0B,0BAA3B,WAA4BR,GAAE,8FACLE,EAAS,UAAD,OAAWF,EAAE,aAAY,KAAD,EAA3C,OAA2C,SAA/CO,EAAI,EAAJA,KAAI,kBACLA,EAAKI,MAAI,4CACjB,sBAE6B,aAG7B,OAH6B,0BAA9B,WAA+BX,GAAE,8FACRE,EAAS,UAAD,OAAWF,EAAE,aAAY,KAAD,EAA3C,OAA2C,SAA/CO,EAAI,EAAJA,KAAI,kBACLA,EAAKC,SAAO,4CACpB,sBAEM,IAAMd,EAAM,CAAEkB,iBArBpB,SAE+B,GAAD,gCAmBQC,kBA1BtC,WAE+B,gCAwB0BC,gBA/BvD,SAE4B,GAAD,gCA6B6CC,aAZ1E,SAE2B,GAAD,gCAU8DC,gBAPxF,SAE8B,GAAD,gC","sources":["components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","pages/MoviesList/MoviesList.styled.js","pages/MoviesList/MoviesListPage.jsx","services/Api/Api.jsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const StyledLink = styled(NavLink)`\r\n  padding: 8px;\r\n  font-size: 20px;\r\n  text-transform: uppercase;\r\n  border-radius: 10px;\r\n  display: inline-block;\r\n  width: 100%;\r\n\r\n  :hover:not(.active) {\r\n    background-color: burlywood;\r\n    color: white;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { StyledLink } from './MovieItem.styled';\r\n\r\nexport default function MovieItem({ title, href }) {\r\n  const location = useLocation();\r\n  return (\r\n    <li>\r\n      <StyledLink to={href} state={{ from: location }}>\r\n        {title}\r\n      </StyledLink>\r\n    </li>\r\n  );\r\n}\r\n\r\nMovieItem.propTypes = {\r\n  href: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  gap: 30px;\r\n  margin-top: 30px;\r\n`;\r\n\r\nexport const Title = styled.p`\r\n  font-size: 25px;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const MovieList = styled.ul`\r\n  columns: 2;\r\n  column-gap: 60px;\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { API } from '../../services/Api/Api';\r\nimport { Container, Title, MovieList } from './MoviesList.styled';\r\nimport MovieItem from '../../components/MovieItem/MovieItem';\r\n\r\nexport default function MoviesList() {\r\n  const [trendingMovies, setTrendingMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    API.getTrendingMovies().then(setTrendingMovies).catch(console.log);\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Title>Trending movies</Title>\r\n      <MovieList>\r\n        {trendingMovies.map(({ id, original_title }) => (\r\n          <MovieItem key={id} title={original_title} href={`movies/${id}`} />\r\n        ))}\r\n      </MovieList>\r\n    </Container>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\nconst BEARER_TOKEN =\r\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5NjQ0ZjBlYTQyZDM1NTExNjA4MGQ4YzU2ZjJhMmU5NSIsInN1YiI6IjYzODQ5YThiYmYwOWQxMDA3YjA1ZGNhMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Malh7hKQ8cPpJehS1trEierjSDz873qjS069_qwsppI';\r\n\r\nconst instance = axios.create({\r\n  headers: { Authorization: `Bearer ${BEARER_TOKEN}` },\r\n  baseURL: 'https://api.themoviedb.org/3',\r\n});\r\n\r\nasync function getMovieDetails(id) {\r\n  const { data } = await instance(`/movie/${id}`);\r\n  return data;\r\n}\r\n\r\nasync function getTrendingMovies() {\r\n  const { data } = await instance('/trending/movie/week');\r\n  return data.results;\r\n}\r\n\r\nasync function getMoviesByQuery(query) {\r\n  const { data } = await instance('/search/movie', {\r\n    params: {\r\n      query,\r\n    },\r\n  });\r\n  return data.results;\r\n}\r\n\r\nasync function getMovieCast(id) {\r\n  const { data } = await instance(`/movie/${id}/credits`);\r\n  return data.cast;\r\n}\r\n\r\nasync function getMovieReviews(id) {\r\n  const { data } = await instance(`/movie/${id}/reviews`);\r\n  return data.results;\r\n}\r\n\r\nexport const API = { getMoviesByQuery, getTrendingMovies, getMovieDetails, getMovieCast, getMovieReviews };\r\n"],"names":["StyledLink","styled","NavLink","MovieItem","title","href","location","useLocation","to","state","from","Container","Title","MovieList","MoviesList","useState","trendingMovies","setTrendingMovies","useEffect","API","then","catch","console","log","map","id","original_title","instance","axios","headers","Authorization","baseURL","data","results","query","params","cast","getMoviesByQuery","getTrendingMovies","getMovieDetails","getMovieCast","getMovieReviews"],"sourceRoot":""}