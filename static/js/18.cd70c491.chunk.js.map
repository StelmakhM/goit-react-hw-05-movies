{"version":3,"file":"static/js/18.cd70c491.chunk.js","mappings":"mPAKe,SAASA,IAAa,IAAD,IAClC,GAA0BC,EAAAA,EAAAA,UAAS,MAAK,eAAjCC,EAAK,KAAEC,EAAQ,KACdC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAOjB,IAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,gBAAoBL,GAASM,KAAKP,GAAUQ,MAAMC,QAAQC,IAC5D,GAAG,IAEEX,EAAL,CAGA,IAAQY,EAA2DZ,EAA3DY,MAAOC,EAAoDb,EAApDa,SAAUC,EAA0Cd,EAA1Cc,OAAQC,EAAkCf,EAAlCe,aAAcC,EAAoBhB,EAApBgB,YAAaC,EAAOjB,EAAPiB,GACtDC,EAAYJ,EAAOK,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAI,IAAEC,KAAK,MACjDC,EAAiC,QAAvB,EAAiB,QAAjB,EAAGnB,EAASoB,aAAK,aAAd,EAAgBC,YAAI,QAAI,IAE3C,OACE,4BACE,SAAC,KAAI,CAACC,GAAIH,EAAW,SAAC,aACtB,wBAAKX,KACL,yBAAG,eAAaG,EAAaY,QAAQ,OACrC,gBAAKC,IAAKZ,EAAW,UAlBJ,mCAkBsB,OAAGA,GAAgBa,EAAAA,EAAgBC,IAAG,UAAKlB,EAAK,cACvF,yBAAG,aAAWC,MACd,yBAAG,WAASK,MACZ,4BACE,uBAAG,4BACH,SAAC,KAAI,CAAC,UAASD,EAAIS,GAAG,OAAM,SAAC,UAG7B,SAAC,KAAI,CAAC,UAAST,EAAIS,GAAG,UAAS,SAAC,gBAIlC,SAAC,EAAAK,SAAQ,WACP,SAAC,KAAM,QAvBb,CA2BF,C,4ECvCMC,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,CAAEC,cAAc,UAAD,OAHxB,wNAIAC,QAAS,iCAGqB,aAG/B,OAH+B,0BAAhC,2GACyBJ,EAAS,wBAAwB,KAAD,EAA3C,OAA2C,SAA/CK,EAAI,EAAJA,KAAI,kBACLA,EAAKC,SAAO,4CACpB,sBAE8B,aAO9B,OAP8B,0BAA/B,WAAgCC,GAAK,8FACZP,EAAS,gBAAiB,CAC/CQ,OAAQ,CACND,MAAAA,KAED,KAAD,EAJU,OAIV,SAJMF,EAAI,EAAJA,KAAI,kBAKLA,EAAKC,SAAO,4CACpB,sBAE6B,aAG7B,OAH6B,0BAA9B,WAA+BrB,GAAE,8FACRe,EAAS,UAAD,OAAWf,IAAM,KAAD,EAAnC,OAAmC,SAAvCoB,EAAI,EAAJA,KAAI,kBACLA,GAAI,4CACZ,sBAE0B,aAG1B,OAH0B,0BAA3B,WAA4BpB,GAAE,8FACLe,EAAS,UAAD,OAAWf,EAAE,aAAY,KAAD,EAA3C,OAA2C,SAA/CoB,EAAI,EAAJA,KAAI,kBACLA,EAAKI,MAAI,4CACjB,sBAE6B,aAG7B,OAH6B,0BAA9B,WAA+BxB,GAAE,8FACRe,EAAS,UAAD,OAAWf,EAAE,aAAY,KAAD,EAA3C,OAA2C,SAA/CoB,EAAI,EAAJA,KAAI,kBACLA,EAAKC,SAAO,4CACpB,sBAE4B,aAG5B,OAH4B,0BAA7B,2GACyBN,EAAS,qBAAqB,KAAD,EAAxC,OAAwC,SAA5CK,EAAI,EAAJA,KAAI,kBACLA,GAAI,4CACZ,sBAEM,IAAM9B,EAAM,CAAEmC,iBA/BpB,SAE+B,GAAD,gCA6BQC,kBApCpC,WAE6B,gCAkC0BC,gBAtBzD,SAE8B,GAAD,gCAoB6CC,aAjB1E,SAE2B,GAAD,gCAe8DC,gBAZxF,SAE8B,GAAD,gCAU4EC,eAPzG,WAE4B,gC,oBCtC7B,IADuB,8E","sources":["components/MovieInfo/MovieInfo.jsx","services/Api/Api.jsx","utils/LocalStorage.jsx"],"sourcesContent":["import { API } from '../../services/Api/Api';\r\nimport { useState, useEffect, Suspense } from 'react';\r\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\r\nimport placeholderURL from '../../utils/LocalStorage';\r\n\r\nexport default function MovieInfo() {\r\n  const [movie, setMovie] = useState(null);\r\n  const { movieId } = useParams();\r\n  const location = useLocation();\r\n  const IMG_BASE_URL = 'https://image.tmdb.org/t/p/w300';\r\n\r\n  useEffect(() => {\r\n    API.getMovieDetails(movieId).then(setMovie).catch(console.log);\r\n  }, []);\r\n\r\n  if (!movie) {\r\n    return;\r\n  }\r\n  const { title, overview, genres, vote_average, poster_path, id } = movie;\r\n  const newGenres = genres.map(genre => genre.name).join(', ');\r\n  const goBackHref = location.state?.from ?? '/';\r\n\r\n  return (\r\n    <div>\r\n      <Link to={goBackHref}>Go Back</Link>\r\n      <h2>{title}</h2>\r\n      <p>User Score: {vote_average.toFixed(1)}</p>\r\n      <img src={poster_path ? `${IMG_BASE_URL}${poster_path}` : placeholderURL} alt={`${title} poster`} />\r\n      <p>Overview: {overview}</p>\r\n      <p>Genres: {newGenres}</p>\r\n      <div>\r\n        <p>Additional information</p>\r\n        <Link data-id={id} to=\"cast\">\r\n          cast\r\n        </Link>\r\n        <Link data-id={id} to=\"reviews\">\r\n          reviews\r\n        </Link>\r\n      </div>\r\n      <Suspense>\r\n        <Outlet />\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\nconst BEARER_TOKEN =\r\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5NjQ0ZjBlYTQyZDM1NTExNjA4MGQ4YzU2ZjJhMmU5NSIsInN1YiI6IjYzODQ5YThiYmYwOWQxMDA3YjA1ZGNhMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Malh7hKQ8cPpJehS1trEierjSDz873qjS069_qwsppI';\r\n\r\nconst instance = axios.create({\r\n  headers: { Authorization: `Bearer ${BEARER_TOKEN}` },\r\n  baseURL: 'https://api.themoviedb.org/3',\r\n});\r\n\r\nasync function getTrendingMovies() {\r\n  const { data } = await instance('/trending/movie/week');\r\n  return data.results;\r\n}\r\n\r\nasync function getMoviesByQuery(query) {\r\n  const { data } = await instance('/search/movie', {\r\n    params: {\r\n      query,\r\n    },\r\n  });\r\n  return data.results;\r\n}\r\n\r\nasync function getMovieDetails(id) {\r\n  const { data } = await instance(`/movie/${id}`);\r\n  return data;\r\n}\r\n\r\nasync function getMovieCast(id) {\r\n  const { data } = await instance(`/movie/${id}/credits`);\r\n  return data.cast;\r\n}\r\n\r\nasync function getMovieReviews(id) {\r\n  const { data } = await instance(`/movie/${id}/reviews`);\r\n  return data.results;\r\n}\r\n\r\nasync function getMovieGenres() {\r\n  const { data } = await instance(`/genre/movie/list`);\r\n  return data;\r\n}\r\n\r\nexport const API = { getMoviesByQuery, getTrendingMovies, getMovieDetails, getMovieCast, getMovieReviews, getMovieGenres };\r\n","const placeholderURL = 'https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg';\r\nexport default placeholderURL;\r\n"],"names":["MovieInfo","useState","movie","setMovie","movieId","useParams","location","useLocation","useEffect","API","then","catch","console","log","title","overview","genres","vote_average","poster_path","id","newGenres","map","genre","name","join","goBackHref","state","from","to","toFixed","src","placeholderURL","alt","Suspense","instance","axios","headers","Authorization","baseURL","data","results","query","params","cast","getMoviesByQuery","getTrendingMovies","getMovieDetails","getMovieCast","getMovieReviews","getMovieGenres"],"sourceRoot":""}