{"version":3,"file":"static/js/914.2058f594.chunk.js","mappings":"yPAEaA,EAAgBC,EAAAA,GAAAA,GAAS,wGAOzBC,EAAWD,EAAAA,GAAAA,GAAS,2JASpBE,EAAaF,EAAAA,GAAAA,IAAU,gD,kBCZrB,SAASG,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,MAAK,eAA/BC,EAAI,KAAEC,EAAO,KACZC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,IAJAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,aAAiBH,GAASI,KAAKL,GAASM,MAAMC,QAAQC,IACxD,GAAG,CAACP,IAECF,EAIL,OACE,8BACGA,EAAKU,OAAS,GACb,SAAChB,EAAa,UACXM,EAAKW,KAAI,WAAoCC,GAAC,IAAlCC,EAAI,EAAJA,KAAMC,EAAY,EAAZA,aAAcC,EAAS,EAATA,UAAS,OACxC,UAACnB,EAAQ,YACP,SAACC,EAAU,CAACmB,MAAM,MAAMC,IAAKH,EAAY,UAAMI,EAAAA,GAAY,OAAGJ,GAAiBK,EAAAA,KAC/E,4BACE,0BACE,uBAAG,iBAAgB,IAAEN,MAEvB,0BACE,uBAAG,gBAAe,IAAEE,UAPXH,EAUJ,OAIf,uBAAG,iCAIX,C,+ECpCMQ,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,CAAEC,cAAc,UAAD,OAHxB,wNAIAC,QAAS,iCAGmB,aAG7B,OAH6B,0BAA9B,WAA+BC,GAAE,8FACRL,EAAS,UAAD,OAAWK,IAAM,KAAD,EAAnC,OAAmC,SAAvCC,EAAI,EAAJA,KAAI,kBACLA,GAAI,4CACZ,sBAE+B,aAG/B,OAH+B,0BAAhC,2GACyBN,EAAS,wBAAwB,KAAD,EAA3C,OAA2C,SAA/CM,EAAI,EAAJA,KAAI,kBACLA,EAAKC,SAAO,4CACpB,sBAE8B,aAO9B,OAP8B,0BAA/B,WAAgCC,GAAK,8FACZR,EAAS,gBAAiB,CAC/CS,OAAQ,CACND,MAAAA,KAED,KAAD,EAJU,OAIV,SAJMF,EAAI,EAAJA,KAAI,kBAKLA,EAAKC,SAAO,4CACpB,sBAE0B,aAG1B,OAH0B,0BAA3B,WAA4BF,GAAE,8FACLL,EAAS,UAAD,OAAWK,EAAE,aAAY,KAAD,EAA3C,OAA2C,SAA/CC,EAAI,EAAJA,KAAI,kBACLA,EAAK1B,MAAI,4CACjB,sBAE6B,aAG7B,OAH6B,0BAA9B,WAA+ByB,GAAE,8FACRL,EAAS,UAAD,OAAWK,EAAE,aAAY,KAAD,EAA3C,OAA2C,SAA/CC,EAAI,EAAJA,KAAI,kBACLA,EAAKC,SAAO,4CACpB,sBAEM,IAAMtB,EAAM,CAAEyB,iBArBpB,SAE+B,GAAD,gCAmBQC,kBA1BtC,WAE+B,gCAwB0BC,gBA/BvD,SAE4B,GAAD,gCA6B6CC,aAZ1E,SAE2B,GAAD,gCAU8DC,gBAPxF,SAE8B,GAAD,gC,6EClCvB,IAAMf,EAAiB,+EACjBD,EAAe,iC","sources":["pages/Cast/Cast.styled.js","pages/Cast/CastPage.jsx","services/Api/Api.jsx","utils/ImageURL.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CastContainer = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  list-style: none;\r\n  gap: 20px;\r\n`;\r\n\r\nexport const CastItem = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n  border: 1px dashed burlywood;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n`;\r\n\r\nexport const ActorPhoto = styled.img`\r\n  border-radius: 10px;\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { API } from '../../services/Api/Api';\r\nimport { CastContainer, CastItem, ActorPhoto } from './Cast.styled';\r\nimport { placeholderURL, IMG_BASE_URL } from '../../utils/ImageURL';\r\n\r\nexport default function Cast() {\r\n  const [cast, setCast] = useState(null);\r\n  const { movieId } = useParams();\r\n\r\n  useEffect(() => {\r\n    API.getMovieCast(movieId).then(setCast).catch(console.log);\r\n  }, [movieId]);\r\n\r\n  if (!cast) {\r\n    return;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {cast.length > 0 ? (\r\n        <CastContainer>\r\n          {cast.map(({ name, profile_path, character }, i) => (\r\n            <CastItem key={i}>\r\n              <ActorPhoto width=\"100\" src={profile_path ? `${IMG_BASE_URL}${profile_path}` : placeholderURL} />\r\n              <div>\r\n                <p>\r\n                  <b>Actor name :</b> {name}\r\n                </p>\r\n                <p>\r\n                  <b>Character :</b> {character}\r\n                </p>\r\n              </div>\r\n            </CastItem>\r\n          ))}\r\n        </CastContainer>\r\n      ) : (\r\n        <p>No cast info for this movie</p>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\nconst BEARER_TOKEN =\r\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5NjQ0ZjBlYTQyZDM1NTExNjA4MGQ4YzU2ZjJhMmU5NSIsInN1YiI6IjYzODQ5YThiYmYwOWQxMDA3YjA1ZGNhMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Malh7hKQ8cPpJehS1trEierjSDz873qjS069_qwsppI';\r\n\r\nconst instance = axios.create({\r\n  headers: { Authorization: `Bearer ${BEARER_TOKEN}` },\r\n  baseURL: 'https://api.themoviedb.org/3',\r\n});\r\n\r\nasync function getMovieDetails(id) {\r\n  const { data } = await instance(`/movie/${id}`);\r\n  return data;\r\n}\r\n\r\nasync function getTrendingMovies() {\r\n  const { data } = await instance('/trending/movie/week');\r\n  return data.results;\r\n}\r\n\r\nasync function getMoviesByQuery(query) {\r\n  const { data } = await instance('/search/movie', {\r\n    params: {\r\n      query,\r\n    },\r\n  });\r\n  return data.results;\r\n}\r\n\r\nasync function getMovieCast(id) {\r\n  const { data } = await instance(`/movie/${id}/credits`);\r\n  return data.cast;\r\n}\r\n\r\nasync function getMovieReviews(id) {\r\n  const { data } = await instance(`/movie/${id}/reviews`);\r\n  return data.results;\r\n}\r\n\r\nexport const API = { getMoviesByQuery, getTrendingMovies, getMovieDetails, getMovieCast, getMovieReviews };\r\n","export const placeholderURL = 'https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg';\r\nexport const IMG_BASE_URL = 'https://image.tmdb.org/t/p/w300';\r\n"],"names":["CastContainer","styled","CastItem","ActorPhoto","Cast","useState","cast","setCast","movieId","useParams","useEffect","API","then","catch","console","log","length","map","i","name","profile_path","character","width","src","IMG_BASE_URL","placeholderURL","instance","axios","headers","Authorization","baseURL","id","data","results","query","params","getMoviesByQuery","getTrendingMovies","getMovieDetails","getMovieCast","getMovieReviews"],"sourceRoot":""}