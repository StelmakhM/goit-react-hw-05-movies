{"version":3,"file":"static/js/432.f2d6c6bc.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","services/Api/Api.jsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const StyledLink = styled(NavLink)`\r\n  padding: 8px;\r\n  font-size: 20px;\r\n  text-transform: uppercase;\r\n  border-radius: 10px;\r\n  display: inline-block;\r\n  width: 100%;\r\n\r\n  :hover:not(.active) {\r\n    background-color: burlywood;\r\n    color: white;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { StyledLink } from './MovieItem.styled';\r\n\r\nexport default function MovieItem({ title, href }) {\r\n  const location = useLocation();\r\n  return (\r\n    <li>\r\n      <StyledLink to={href} state={{ from: location }}>\r\n        {title}\r\n      </StyledLink>\r\n    </li>\r\n  );\r\n}\r\n\r\nMovieItem.propTypes = {\r\n  href: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledForm = styled.form`\r\n  display: inline-block;\r\n  margin: 0 auto;\r\n  margin-top: 40px;\r\n  text-align: center;\r\n  position: relative;\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n  height: 30px;\r\n  width: 300px;\r\n  border: 1px solid burlywood;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  font-size: 20px;\r\n  padding: 5px;\r\n`;\r\n\r\nexport const SearchButton = styled.button`\r\n  position: absolute;\r\n  right: 0;\r\n  background: transparent;\r\n  border: transparent;\r\n  outline: none;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: burlywood;\r\n  }\r\n`;\r\n\r\nexport const MovieList = styled.ul`\r\n  columns: 2;\r\n  column-gap: 40px;\r\n  max-width: 700px;\r\n  display: block;\r\n  margin: 30px auto 0;\r\n`;\r\n","import { useState, useEffect } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { API } from '../../services/Api/Api';\r\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\r\nimport { StyledForm, StyledInput, SearchButton, MovieList } from './SearchBar.styled';\r\nimport { CiSearch } from 'react-icons/ci';\r\nimport MovieItem from '../MovieItem/MovieItem';\r\n\r\nexport default function SearchBar() {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const query = searchParams.get('query') ?? '';\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!query) {\r\n      return;\r\n    }\r\n    API.getMoviesByQuery(query).then(setMovies).catch(console.log);\r\n  }, []);\r\n\r\n  const onChangeHandler = e => {\r\n    const { value } = e.target;\r\n    setSearchParams(value ? { query: value } : {});\r\n  };\r\n\r\n  const onSubmitHandler = e => {\r\n    e.preventDefault();\r\n    if (!query) {\r\n      Notify.info('Please, enter movie name');\r\n      return;\r\n    }\r\n    API.getMoviesByQuery(query).then(setMovies).catch(console.log);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StyledForm onSubmit={onSubmitHandler}>\r\n        <StyledInput type=\"text\" value={query} onChange={onChangeHandler} />\r\n        <SearchButton type=\"submit\">\r\n          <CiSearch size={30} />\r\n        </SearchButton>\r\n      </StyledForm>\r\n      {movies.length > 0 && (\r\n        <MovieList>\r\n          {movies.map(({ id, original_title }) => (\r\n            <MovieItem key={id} title={original_title} href={`${id}`} />\r\n          ))}\r\n        </MovieList>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\nconst BEARER_TOKEN =\r\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5NjQ0ZjBlYTQyZDM1NTExNjA4MGQ4YzU2ZjJhMmU5NSIsInN1YiI6IjYzODQ5YThiYmYwOWQxMDA3YjA1ZGNhMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Malh7hKQ8cPpJehS1trEierjSDz873qjS069_qwsppI';\r\n\r\nconst instance = axios.create({\r\n  headers: { Authorization: `Bearer ${BEARER_TOKEN}` },\r\n  baseURL: 'https://api.themoviedb.org/3',\r\n});\r\n\r\nasync function getTrendingMovies() {\r\n  const { data } = await instance('/trending/movie/week');\r\n  return data.results;\r\n}\r\n\r\nasync function getMoviesByQuery(query) {\r\n  const { data } = await instance('/search/movie', {\r\n    params: {\r\n      query,\r\n    },\r\n  });\r\n  return data.results;\r\n}\r\n\r\nasync function getMovieDetails(id) {\r\n  const { data } = await instance(`/movie/${id}`);\r\n  return data;\r\n}\r\n\r\nasync function getMovieCast(id) {\r\n  const { data } = await instance(`/movie/${id}/credits`);\r\n  return data.cast;\r\n}\r\n\r\nasync function getMovieReviews(id) {\r\n  const { data } = await instance(`/movie/${id}/reviews`);\r\n  return data.results;\r\n}\r\n\r\nexport const API = { getMoviesByQuery, getTrendingMovies, getMovieDetails, getMovieCast, getMovieReviews };\r\n"],"names":["StyledLink","styled","NavLink","MovieItem","title","href","location","useLocation","to","state","from","StyledForm","StyledInput","SearchButton","MovieList","SearchBar","useSearchParams","searchParams","setSearchParams","query","get","useState","movies","setMovies","useEffect","API","then","catch","console","log","onSubmit","e","preventDefault","Notify","type","value","onChange","target","size","length","map","id","original_title","instance","axios","headers","Authorization","baseURL","data","results","params","cast","getMoviesByQuery","getTrendingMovies","getMovieDetails","getMovieCast","getMovieReviews"],"sourceRoot":""}